package com.ELane;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.util.List;

/**
 * Created by ASUS on 17-Apr-17.
 */
@Controller    // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;
    @Autowired
    private ConsumerRepository consumerRepository;
    @Autowired
    private ItemCategoryRepository itemCategoryRepository;
    @GetMapping(path="/add") // Map ONLY GET Requests
    public @ResponseBody
    String addNewUser (@RequestParam String name, @RequestParam String email) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        MyUser n = new MyUser();
        n.setName(name);
        n.setEmail(email);
        userRepository.save(n);
        return "Saved";
    }


    @PostMapping(path="/signup") // Map ONLY GET Requests
    public String addConsumer (@ModelAttribute Consumer consumer) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        consumerRepository.save(consumer);
        return "login";
    }

    @GetMapping(path="/login") // Map ONLY GET Requests
    public String prevlogin () {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request
        return "login";
    }

    @GetMapping(path="/addCategory") // Map ONLY GET Requests
    public String addCategory () {
        return "addCategory";
    }

    @PostMapping(path="/addCategory") // Map ONLY GET Requests
    public String addCategory2 (@ModelAttribute ItemCategory itemCategory) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        itemCategoryRepository.save(itemCategory);
        return "login";
    }
    @PostMapping(path="/login") // Map ONLY GET Requests
    public String login (@RequestParam("username") String username, @RequestParam("password") String password) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        List<Consumer> consumerList=consumerRepository.findByUsernameAndPassword(username,password);
        if(consumerList.isEmpty()) return "login";
        return "greeting2";
    }

    @GetMapping(path="/all")
    public @ResponseBody
    Iterable<MyUser> getAllUsers() {
        // This returns a JSON or XML with the users
        return userRepository.findAll();
    }
}